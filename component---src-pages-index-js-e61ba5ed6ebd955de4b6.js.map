{"version":3,"sources":["webpack:///./src/components/listing.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Listing","react_default","a","createElement","gatsby_browser_entry","query","render","_ref","allMarkdownRemark","edges","map","_ref2","node","key","frontmatter","slug","to","title","date","excerpt","data","_1024292424","IndexPage","layout","seo","keywords","listing","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","href","_755544856","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-e61ba5ed6ebd955de4b6.js","sourcesContent":["import React from \"react\"\nimport { Link, StaticQuery, graphql } from \"gatsby\"\n\nconst LISTING_QUERY = graphql`\n  query BlogPostListing {\n    allMarkdownRemark(limit: 10, sort: {\n      order: DESC,\n      fields: [frontmatter___date]\n    }) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            slug\n          }\n        }\n      }\n    }\n  }\n`\nconst Listing = () => (\n  <StaticQuery\n    query={ LISTING_QUERY }\n    render={({ allMarkdownRemark }) => (\n      allMarkdownRemark.edges.map(({ node }) => (\n        <article key={ node.frontmatter.slug }>\n          <Link to={`/posts${node.frontmatter.slug}`} >\n            <h2>{ node.frontmatter.title }</h2>\n          </Link>\n          <p>{ node.frontmatter.date}</p>\n          <p>{ node.excerpt }</p>\n          <Link to={`/posts${node.frontmatter.slug}`}>Read More</Link>\n        </article>\n      ))\n    )}\n  />\n)\n\nexport default Listing\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Listing from '../components/listing'\nimport SEO from \"../components/seo\"\nimport Archive from '../components/archive'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Listing />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}